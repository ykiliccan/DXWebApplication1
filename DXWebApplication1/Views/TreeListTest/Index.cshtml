
@{
    ViewBag.Title = "Index";
}

<style type="text/css">
    .highlight {
        background-color: #99FF66;
    }
</style>



<script type="text/javascript">
function OnBeginCallback(s, e) {
        console.log('Tree Begin callback : ' + e.command);


        //var container = $("body");
        //var token = $('input[name="__RequestVerificationToken"]', container).val();
        //e.customArgs["__RequestVerificationToken"] = token;

        //if (e.command === "StartEditNewNode") {
        //   // console.log('GrupId: ' + gvStokParametreListe.cpAnaGrupId);
        //    e.customArgs["_grupId"] = 989999;
        //}
        //else if (e.command === "UpdateEdit") {
        //    console.log('TreeList: ' + gvStokParametreListe.cpParametreDegerListesi);
        //    e.customArgs["ParametreDegerListesi"] = gvStokParametreListe.cpParametreDegerListesi;
        //    e.customArgs["_grupId"] = 989988;
        //}
    }
function OnTreeNodeFocusing(s, e) {

    //    sonBakilanStokNodKeyi = e.nodeKey;

}

function OnEndCallback(s, e) {

    console.log("end callback");
}
function OnTextChanged(s, e) {
    treeList1.PerformCallback({ filter: TextBox.GetText() });
}

function OnFilterButtonClick(s, e) {
    treeList1.PerformCallback({ ozFilter: TextBoxFilter.GetText() });

}

</script>
@Html.DevExpress().TextBox(settings =>
{
    settings.Name = "TextBox";
    settings.Properties.Caption = "Search";
    settings.Properties.ClientSideEvents.TextChanged = "OnTextChanged";
}).GetHtml()

@*@Html.DevExpress().TextBox(settings =>
{
    settings.Name = "TextBoxFilter";
    settings.Properties.Caption = "Filter";
}).GetHtml()*@


@Html.DevExpress().ButtonEdit(settings =>
{
    settings.Name = "TextBoxFilter";
    settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;

    //settings.Properties.ClearButton.Visibility = AutoBoolean.True;

}).GetHtml()

@Html.DevExpress().TokenBox(settings => {
    settings.Name = "tokenBoxFilter";
    settings.Properties.Items.Add("Name");
    settings.Properties.Items.Add("Data");

}).GetHtml()

@Html.DevExpress().Button(settings =>
{
    settings.Name = "btnFilter";
    settings.Text = "Filter";
    
    settings.ClientSideEvents.Click = "OnFilterButtonClick";

}).GetHtml()

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "frmSearchPanel";
    settings.ColCount = 4;
    settings.Items.AddEmptyItem();

    settings.Items.Add(item1 =>
    {
        item1.Name = "item1";
        item1.NestedExtensionType = FormLayoutNestedExtensionItemType.TokenBox;
        TokenBoxSettings tbs = (TokenBoxSettings)item1.NestedExtensionSettings;
        tbs.Name = "item1";
        tbs.Properties.Items.Add("Name");
        tbs.Properties.Items.Add("Data");
        tbs.Properties.Tokens.Add("Name");

    });


}).GetHtml()

    @using (Html.BeginForm())
    {
        Html.RenderAction("TreeListControl", "TreeListTest");
    }
